[tool.poetry]
name = "sparkorm"
version = "1.2.25"  # do not edit manually. kept in sync with `tool.commitizen` config via automation
description = "SparkORM: Python Spark SQL & DataFrame schema management and basic Object Relational Mapping."
authors = ["Andrei Suiu <andrei.suiu@gmail.com>"]
repository = "https://github.com/asuiu/sparkorm"
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.8,<4.0.0"
streamerate = "^1"
StrEnum = ">=0.4.0"
tsx = ">=0.1.16"

[tool.poetry.extras]
pyspark = ["pyspark"]


[tool.poetry.dev-dependencies]
pytest = "~7.2"
invoke = "~2.0"
black = ">=23.1"
pycodestyle = "~2.10"
pydocstyle = "~6.3"
prospector = "~1.10"
pytest-spark = "~0.6"
termcolor = "~2.2.0"
commitizen = "~2.42.1"
tomlkit = "~0.11.6"
pytest-only = "~=2.0.0"
coverage = {extras = ["toml"], version = "~7.2.1"}
pytest-cov = "~4.0.0"
scikit-build = "~0.16.7"
tsx = "^0.1.4"
pre-commit = ">=2.21.0"
pandas = ">=1.0.5" # required by pyspark to run tests
PyArrow = ">=1.0.0" # required by pyspark to run tests

[tool.poetry.scripts]
test = "tasks:test"
reformat = "tasks:reformat"
lint = "tasks:lint"
typecheck = "tasks:typecheck"
verify-all = "tasks:verify_all"
find-releasable-changes = "tasks:find_releasable_changes"
prepare-release = "tasks:prepare_release"
debug-auto-git-tag = "tasks:debug_auto_git_tag"

[tool.black]
line-length = 160
include = '\.pyi?$'
default_language_version = '3.8'

[tool.pylint.master]
#ignore="tests,test_integrations"
ignore-patterns=["test_.*"]
load-plugins=["pylint.extensions.no_self_use"]

[tool.pylint.format]
max-module-lines = 1000

[tool.pylint.messages_control]
max-line-length = 160
disable = ["import-error",
    "missing-module-docstring",
    "missing-class-docstring",
    "invalid-name",
    "no-name-in-module",
    "missing-function-docstring",
    "too-few-public-methods",
    "too-many-instance-attributes",
    "logging-fstring-interpolation"]
output-format = "colorized"
max-locals=25
max-args=10
enable="useless-suppression"

[tool.ruff]
line-length = 160
# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []



[tool.commitizen]
name = "cz_conventional_commits"
version = "1.2.19"  # do not edit manually. kept in sync with `tool.poetry` config via automation
tag_format = "v$version"

# Same as Black.
line-length = 160

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:"
]

[build-system]
requires = ["poetry>=1.3"]
build-backend = "poetry.masonry.api"
